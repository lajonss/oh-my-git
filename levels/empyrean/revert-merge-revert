title = Merge revert apocalypse
cards = checkout revert merge push

[description]

WARNING: This is bad. Don't try this at home pls.

What happened:
1. you've committed something
2. you've merged it into the remote branch
3. you've reverted the merge commit and pushed that to remote branch
4. you've added some more changes
5. you try to push the changes to remote branch, but something's wrong

What you want to do - revert the merge revert:
- either by actual reverting
- or overwriting remote branch history

[setup]

echo "beginning" > beginning
git add .
git commit -m beginning

echo "a change from remote" > a_change_from_remote
git add .
git commit -m "a change from remote"

git push team main
git branch -u team/main main

git checkout -b feature/my_changes HEAD~1

echo "first change from you" > first_change_from_you
git add .
git commit -m "first change from you"

git merge --no-edit team/main

git checkout main
git merge feature/my_changes
git revert -m 1 --no-edit HEAD
git push

git checkout feature/my_changes
echo "second change from you" > second_change_from_you
git add .
git commit -m "second change from you"

[setup team]

git checkout main

[win team]

# The team's main branch contains your first changes.
test "$(git show main:first_change_from_you)" = "first change from you"
# The team's main branch contains your second changes.
test "$(git show main:second_change_from_you)" = "second change from you"
# The team's main branch contains a change from remote
test "$(git show main:a_change_from_remote)" = "a change from remote"
